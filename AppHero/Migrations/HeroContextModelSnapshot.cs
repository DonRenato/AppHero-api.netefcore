// <auto-generated />
using System;
using EFCore.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppHero.Migrations
{
    [DbContext(typeof(HeroContext))]
    partial class HeroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppHero.Model.Battle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("beginDate");

                    b.Property<DateTime>("endDate");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("battles");
                });

            modelBuilder.Entity("AppHero.Model.BattleHero", b =>
                {
                    b.Property<int>("battleId");

                    b.Property<int>("heroId");

                    b.HasKey("battleId", "heroId");

                    b.HasIndex("heroId");

                    b.ToTable("battleHeroes");
                });

            modelBuilder.Entity("AppHero.Model.Hero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("heroes");
                });

            modelBuilder.Entity("AppHero.Model.SecretIdentity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("heroId");

                    b.Property<string>("realName");

                    b.HasKey("id");

                    b.HasIndex("heroId")
                        .IsUnique();

                    b.ToTable("secretIdentities");
                });

            modelBuilder.Entity("AppHero.Model.Weapon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("heroId");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.HasIndex("heroId");

                    b.ToTable("weapons");
                });

            modelBuilder.Entity("AppHero.Model.BattleHero", b =>
                {
                    b.HasOne("AppHero.Model.Battle", "battle")
                        .WithMany("battlesHeroes")
                        .HasForeignKey("battleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppHero.Model.Hero", "hero")
                        .WithMany("battlesHeroes")
                        .HasForeignKey("heroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AppHero.Model.SecretIdentity", b =>
                {
                    b.HasOne("AppHero.Model.Hero", "hero")
                        .WithOne("secretIdentity")
                        .HasForeignKey("AppHero.Model.SecretIdentity", "heroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AppHero.Model.Weapon", b =>
                {
                    b.HasOne("AppHero.Model.Hero", "hero")
                        .WithMany("weapons")
                        .HasForeignKey("heroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
